services:

  db_bolao:
    image: postgres:15
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"

  rebbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - "15672:15672"
      - "5672:5672"

  redis:
    image: redis:7
    restart: always

  web:
    build: .
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    restart: always
    volumes:
      - static:/static
      - media:/media
    env_file:
      - .env
    ports:
       - "8000:8000"
    networks:
      - nginx_network
    depends_on:
      - db_bolao
      - rebbitmq

  celery:
    build: .
    command: celery -A app worker --loglevel=info
    restart: always
    volumes:
      - static:/static
      - media:/media
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
    depends_on:
      - rebbitmq
      - redis
      - db_bolao

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - static:/static
      - media:/media
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/letsencrypt  # Certificados gerenciados pelo Certbot
      - ./nginx/www:/var/www/certbot    # Diret√≥rio para os desafios do Certbot
    networks:
      - nginx_network
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/certs:/etc/letsencrypt
      - ./nginx/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; done'"
    networks:
      - nginx_network

networks:
  nginx_network:
    driver: bridge
    
volumes:
  pgdata:
  static:
  media:
